{"version":3,"sources":["utils.ts","App.tsx","reportWebVitals.js","index.tsx"],"names":["names","getMonth","date","formatDate","dayStr","getDate","toString","padStart","monthStr","yearStr","getFullYear","hourStr","getHours","minutStr","getMinutes","secondStr","getSeconds","changeDateWithControl","prevDate","getBiggerPart","setBiggerPart","setSmallerPart","last","call","App","ref","useRef","Date","dateText","current","Container","Input","defaultValue","onKeyDown","evt","delta","input","currentTarget","cursor","selectionStart","key","ignoreBorders","ctrlKey","preventDefault","setDate","prototype","setMonth","length","setFullYear","setHours","setMinutes","setSeconds","value","selectionEnd","autoFocus","styled","div","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"iNAAMA,EAAQ,CACZ,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGK,SAASC,EAASC,GACvB,OAAOF,EAAME,EAAKD,YAGb,SAASE,EAAWD,GACzB,IAAME,EAASF,EAAKG,UAAUC,WAAWC,SAAS,EAAG,KAC/CC,EAAWP,EAASC,GACpBO,EAAUP,EAAKQ,cAEfC,EAAUT,EAAKU,WAAWN,WAAWC,SAAS,EAAG,KACjDM,EAAWX,EAAKY,aAAaR,WAAWC,SAAS,EAAG,KACpDQ,EAAYb,EAAKc,aAAaV,WAAWC,SAAS,EAAG,KAE3D,MAAM,GAAN,OAAUH,EAAV,YAAoBI,EAApB,YAAgCC,EAAhC,YAA2CE,EAA3C,YAAsDE,EAAtD,YAAkEE,GAG7D,SAASE,EACdf,EACAgB,EACAC,EACAC,EACAC,EACAC,GAEIH,EAAcI,KAAKrB,GAAQiB,EAAcI,KAAKL,IAChDG,EAAeE,KAAKrB,EAAMoB,EAAO,GACjCF,EAAcG,KAAKrB,EAAMiB,EAAcI,KAAKL,KACnCC,EAAcI,KAAKrB,GAAQiB,EAAcI,KAAKL,KACvDG,EAAeE,KAAKrB,EAAMoB,GAC1BF,EAAcG,KAAKrB,EAAMiB,EAAcI,KAAKL,K,WCwGjCM,MAhJf,WACE,IAAMC,EAAMC,iBAAO,IAAIC,MAsIjBC,EAAWzB,EAAWsB,EAAII,SAEhC,OACE,cAACC,EAAD,UACE,cAACC,EAAD,CAAOC,aAAcJ,EAAUK,UAxInC,SAAmBC,GACjB,IAMIC,EANEjC,EAAOuB,EAAII,QAEXO,EAAQF,EAAIG,cACZnB,EAAW,IAAIS,KAAKzB,GAEtBoC,EAASF,EAAMG,eAGnB,GAAe,OAAXD,EAAJ,CAIA,GAAgB,YAAZJ,EAAIM,IACNL,EAAQ,MACH,IAAgB,cAAZD,EAAIM,IAGb,OAFAL,GAAS,EAKX,IAAMM,EAAgBP,EAAIQ,QAE1BR,EAAIS,iBAEAL,GAAU,IACZpC,EAAK0C,QAAQ1C,EAAKG,UAAY8B,GAEzBM,GACHxB,EACEf,EACAgB,EACAS,KAAKkB,UAAU5C,SACf0B,KAAKkB,UAAUC,SACfnB,KAAKkB,UAAUD,QACf,GAIJN,EAAS,GAGPA,GAAU,GAAKA,GAAU,EAAIrC,EAASC,GAAM6C,SAC9C7C,EAAK4C,SAAS5C,EAAKD,WAAakC,GAE3BM,GACHxB,EACEf,EACAgB,EACAS,KAAKkB,UAAUnC,YACfiB,KAAKkB,UAAUG,YACfrB,KAAKkB,UAAUC,UACd,GAILR,EAAS,EAAIrC,EAASC,GAAM6C,QAI5BT,GAAU,EAAIrC,EAASC,GAAM6C,QAC7BT,GAAU,EAAIrC,EAASC,GAAM6C,SAE7B7C,EAAK8C,YAAY9C,EAAKQ,cAAgByB,GAEtCG,EAAS,EAAIrC,EAASC,GAAM6C,QAI5BT,GAAU,EAAIrC,EAASC,GAAM6C,QAC7BT,GAAU,GAAKrC,EAASC,GAAM6C,SAE9B7C,EAAK+C,SAAS/C,EAAKU,WAAauB,GAE3BM,GACHxB,EACEf,EACAgB,EACAS,KAAKkB,UAAUxC,QACfsB,KAAKkB,UAAUD,QACfjB,KAAKkB,UAAUI,UACd,GAILX,EAAS,GAAKrC,EAASC,GAAM6C,QAI7BT,GAAU,GAAKrC,EAASC,GAAM6C,QAC9BT,GAAU,GAAKrC,EAASC,GAAM6C,SAE9B7C,EAAKgD,WAAWhD,EAAKY,aAAeqB,GAE/BM,GACHxB,EACEf,EACAgB,EACAS,KAAKkB,UAAUjC,SACfe,KAAKkB,UAAUI,SACftB,KAAKkB,UAAUK,YACd,GAILZ,EAAS,GAAKrC,EAASC,GAAM6C,QAI7BT,GAAU,GAAKrC,EAASC,GAAM6C,QAC9BT,GAAU,GAAKrC,EAASC,GAAM6C,SAE9B7C,EAAKiD,WAAWjD,EAAKc,aAAemB,GAE/BM,GACHxB,EACEf,EACAgB,EACAS,KAAKkB,UAAU/B,WACfa,KAAKkB,UAAUK,WACfvB,KAAKkB,UAAUM,YACd,GAILb,EAAS,GAAKrC,EAASC,GAAM6C,QAG/BX,EAAMgB,MAAQjD,EAAWD,GACzBkC,EAAMiB,aAAef,IAOkCgB,WAAS,OAO9DxB,EAAYyB,IAAOC,IAAV,qEAAGD,CAAH,gGASTxB,EAAQwB,IAAOnB,MAAV,iEAAGmB,CAAH,gOCnJIE,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,SAAUC,oBAAzB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAG1Bf,M","file":"static/js/main.0c5d08a5.chunk.js","sourcesContent":["const names = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nexport function getMonth(date: Date) {\r\n  return names[date.getMonth()];\r\n}\r\n\r\nexport function formatDate(date: Date) {\r\n  const dayStr = date.getDate().toString().padStart(2, \"0\");\r\n  const monthStr = getMonth(date);\r\n  const yearStr = date.getFullYear();\r\n\r\n  const hourStr = date.getHours().toString().padStart(2, \"0\");\r\n  const minutStr = date.getMinutes().toString().padStart(2, \"0\");\r\n  const secondStr = date.getSeconds().toString().padStart(2, \"0\");\r\n\r\n  return `${dayStr} ${monthStr} ${yearStr} ${hourStr}:${minutStr}:${secondStr}`;\r\n}\r\n\r\nexport function changeDateWithControl(\r\n  date: Date,\r\n  prevDate: Date,\r\n  getBiggerPart: (this: Date) => number,\r\n  setBiggerPart: (this: Date, value: number) => void,\r\n  setSmallerPart: (this: Date, value: number) => void,\r\n  last: number\r\n) {\r\n  if (getBiggerPart.call(date) > getBiggerPart.call(prevDate)) {\r\n    setSmallerPart.call(date, last + 1);\r\n    setBiggerPart.call(date, getBiggerPart.call(prevDate));\r\n  } else if (getBiggerPart.call(date) < getBiggerPart.call(prevDate)) {\r\n    setSmallerPart.call(date, last);\r\n    setBiggerPart.call(date, getBiggerPart.call(prevDate));\r\n  }\r\n}\r\n","import { KeyboardEvent, useRef } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { changeDateWithControl, formatDate, getMonth } from \"./utils\";\n\nfunction App() {\n  const ref = useRef(new Date());\n\n  function onKeydown(evt: KeyboardEvent<HTMLInputElement>) {\n    const date = ref.current;\n\n    const input = evt.currentTarget;\n    const prevDate = new Date(date);\n\n    let cursor = input.selectionStart;\n    let delta;\n\n    if (cursor === null) {\n      return;\n    }\n\n    if (evt.key === \"ArrowUp\") {\n      delta = 1;\n    } else if (evt.key === \"ArrowDown\") {\n      delta = -1;\n    } else {\n      return;\n    }\n\n    const ignoreBorders = evt.ctrlKey;\n\n    evt.preventDefault();\n\n    if (cursor <= 2) {\n      date.setDate(date.getDate() + delta);\n\n      if (!ignoreBorders) {\n        changeDateWithControl(\n          date,\n          prevDate,\n          Date.prototype.getMonth,\n          Date.prototype.setMonth,\n          Date.prototype.setDate,\n          0\n        );\n      }\n\n      cursor = 2;\n    }\n\n    if (cursor >= 3 && cursor <= 3 + getMonth(date).length) {\n      date.setMonth(date.getMonth() + delta);\n\n      if (!ignoreBorders) {\n        changeDateWithControl(\n          date,\n          prevDate,\n          Date.prototype.getFullYear,\n          Date.prototype.setFullYear,\n          Date.prototype.setMonth,\n          -1\n        );\n      }\n\n      cursor = 3 + getMonth(date).length;\n    }\n\n    if (\n      cursor >= 4 + getMonth(date).length &&\n      cursor <= 8 + getMonth(date).length\n    ) {\n      date.setFullYear(date.getFullYear() + delta);\n\n      cursor = 8 + getMonth(date).length;\n    }\n\n    if (\n      cursor >= 9 + getMonth(date).length &&\n      cursor <= 11 + getMonth(date).length\n    ) {\n      date.setHours(date.getHours() + delta);\n\n      if (!ignoreBorders) {\n        changeDateWithControl(\n          date,\n          prevDate,\n          Date.prototype.getDate,\n          Date.prototype.setDate,\n          Date.prototype.setHours,\n          -1\n        );\n      }\n\n      cursor = 11 + getMonth(date).length;\n    }\n\n    if (\n      cursor >= 12 + getMonth(date).length &&\n      cursor <= 14 + getMonth(date).length\n    ) {\n      date.setMinutes(date.getMinutes() + delta);\n\n      if (!ignoreBorders) {\n        changeDateWithControl(\n          date,\n          prevDate,\n          Date.prototype.getHours,\n          Date.prototype.setHours,\n          Date.prototype.setMinutes,\n          -1\n        );\n      }\n\n      cursor = 14 + getMonth(date).length;\n    }\n\n    if (\n      cursor >= 15 + getMonth(date).length &&\n      cursor <= 17 + getMonth(date).length\n    ) {\n      date.setSeconds(date.getSeconds() + delta);\n\n      if (!ignoreBorders) {\n        changeDateWithControl(\n          date,\n          prevDate,\n          Date.prototype.getMinutes,\n          Date.prototype.setMinutes,\n          Date.prototype.setSeconds,\n          -1\n        );\n      }\n\n      cursor = 17 + getMonth(date).length;\n    }\n\n    input.value = formatDate(date);\n    input.selectionEnd = cursor;\n  }\n\n  const dateText = formatDate(ref.current);\n\n  return (\n    <Container>\n      <Input defaultValue={dateText} onKeyDown={onKeydown} autoFocus />\n    </Container>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 50vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n`;\n\nconst Input = styled.input`\n  width: 250px;\n  height: 30px;\n  box-sizing: border-box;\n  border: 1px solid lightgray;\n  border-radius: 6px;\n  outline: none;\n  box-shadow: inset 0 0 3px 1px lightgray;\n  font-size: 16px;\n  line-height: 30px;\n  margin: 50px 0 0 50px;\n  padding: 0 10px 0 10px;\n`;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}
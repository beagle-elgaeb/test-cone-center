{"version":3,"sources":["utils.ts","App.tsx","reportWebVitals.js","index.tsx"],"names":["names","getMonth","date","formatDate","dayStr","getDate","toString","padStart","monthStr","yearStr","getFullYear","hourStr","getHours","minutStr","getMinutes","secondStr","getSeconds","changeDateWithControl","prevDate","getBiggerPart","setBiggerPart","setSmallerPart","last","call","App","ref","useRef","Date","dateText","current","Container","Input","defaultValue","onKeyDown","evt","cursorStart","cursorEnd","delta","input","currentTarget","activeCursor","selectionDirection","selectionEnd","selectionStart","key","ignoreBorders","ctrlKey","preventDefault","setDate","prototype","setMonth","length","setFullYear","setHours","setMinutes","setSeconds","value","autoFocus","styled","div","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.d2b74b2d.chunk.js","sourcesContent":["const names = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nexport function getMonth(date: Date) {\r\n  return names[date.getMonth()];\r\n}\r\n\r\nexport function formatDate(date: Date) {\r\n  const dayStr = date.getDate().toString().padStart(2, \"0\");\r\n  const monthStr = getMonth(date);\r\n  const yearStr = date.getFullYear();\r\n\r\n  const hourStr = date.getHours().toString().padStart(2, \"0\");\r\n  const minutStr = date.getMinutes().toString().padStart(2, \"0\");\r\n  const secondStr = date.getSeconds().toString().padStart(2, \"0\");\r\n\r\n  return `${dayStr} ${monthStr} ${yearStr} ${hourStr}:${minutStr}:${secondStr}`;\r\n}\r\n\r\nexport function changeDateWithControl(\r\n  date: Date,\r\n  prevDate: Date,\r\n  getBiggerPart: (this: Date) => number,\r\n  setBiggerPart: (this: Date, value: number) => void,\r\n  setSmallerPart: (this: Date, value: number) => void,\r\n  last: number\r\n) {\r\n  if (getBiggerPart.call(date) > getBiggerPart.call(prevDate)) {\r\n    setSmallerPart.call(date, last + 1);\r\n    setBiggerPart.call(date, getBiggerPart.call(prevDate));\r\n  } else if (getBiggerPart.call(date) < getBiggerPart.call(prevDate)) {\r\n    setSmallerPart.call(date, last);\r\n    setBiggerPart.call(date, getBiggerPart.call(prevDate));\r\n  }\r\n}\r\n","import { KeyboardEvent, useRef } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { changeDateWithControl, formatDate, getMonth } from \"./utils\";\r\n\r\nfunction App() {\r\n  const ref = useRef(new Date());\r\n\r\n  function onKeydown(evt: KeyboardEvent<HTMLInputElement>) {\r\n    const date = ref.current;\r\n\r\n    const input = evt.currentTarget;\r\n    const prevDate = new Date(date);\r\n\r\n    let cursorStart;\r\n    let cursorEnd;\r\n\r\n    const activeCursor =\r\n      input.selectionDirection === \"forward\"\r\n        ? input.selectionEnd\r\n        : input.selectionStart;\r\n\r\n    let delta;\r\n\r\n    if (activeCursor === null) {\r\n      return;\r\n    }\r\n\r\n    if (evt.key === \"ArrowUp\") {\r\n      delta = 1;\r\n    } else if (evt.key === \"ArrowDown\") {\r\n      delta = -1;\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    const ignoreBorders = evt.ctrlKey;\r\n\r\n    evt.preventDefault();\r\n\r\n    // ------------------------------- ДЕНЬ ---------------------------------------\r\n    if (activeCursor <= 2) {\r\n      date.setDate(date.getDate() + delta);\r\n\r\n      if (!ignoreBorders) {\r\n        changeDateWithControl(\r\n          date,\r\n          prevDate,\r\n          Date.prototype.getMonth,\r\n          Date.prototype.setMonth,\r\n          Date.prototype.setDate,\r\n          0\r\n        );\r\n      }\r\n\r\n      cursorStart = 0;\r\n      cursorEnd = 2;\r\n    }\r\n\r\n    // ------------------------------- МЕСЯЦ --------------------------------------\r\n    else if (activeCursor >= 3 && activeCursor <= 3 + getMonth(date).length) {\r\n      date.setMonth(date.getMonth() + delta);\r\n\r\n      if (!ignoreBorders) {\r\n        changeDateWithControl(\r\n          date,\r\n          prevDate,\r\n          Date.prototype.getFullYear,\r\n          Date.prototype.setFullYear,\r\n          Date.prototype.setMonth,\r\n          -1\r\n        );\r\n      }\r\n\r\n      cursorStart = 3;\r\n      cursorEnd = 3 + getMonth(date).length;\r\n    }\r\n\r\n    // ------------------------------- ГОД ----------------------------------------\r\n    else if (\r\n      activeCursor >= 4 + getMonth(date).length &&\r\n      activeCursor <= 8 + getMonth(date).length\r\n    ) {\r\n      date.setFullYear(date.getFullYear() + delta);\r\n\r\n      cursorStart = 4 + getMonth(date).length;\r\n      cursorEnd = 8 + getMonth(date).length;\r\n    }\r\n\r\n    // ------------------------------- ЧАСЫ -----------------------------------\r\n    else if (\r\n      activeCursor >= 9 + getMonth(date).length &&\r\n      activeCursor <= 11 + getMonth(date).length\r\n    ) {\r\n      date.setHours(date.getHours() + delta);\r\n\r\n      if (!ignoreBorders) {\r\n        changeDateWithControl(\r\n          date,\r\n          prevDate,\r\n          Date.prototype.getDate,\r\n          Date.prototype.setDate,\r\n          Date.prototype.setHours,\r\n          -1\r\n        );\r\n      }\r\n\r\n      cursorStart = 9 + getMonth(date).length;\r\n      cursorEnd = 11 + getMonth(date).length;\r\n    }\r\n\r\n    // ------------------------------- МИНУТЫ ---------------------------------\r\n    else if (\r\n      activeCursor >= 12 + getMonth(date).length &&\r\n      activeCursor <= 14 + getMonth(date).length\r\n    ) {\r\n      date.setMinutes(date.getMinutes() + delta);\r\n\r\n      if (!ignoreBorders) {\r\n        changeDateWithControl(\r\n          date,\r\n          prevDate,\r\n          Date.prototype.getHours,\r\n          Date.prototype.setHours,\r\n          Date.prototype.setMinutes,\r\n          -1\r\n        );\r\n      }\r\n\r\n      cursorStart = 12 + getMonth(date).length;\r\n      cursorEnd = 14 + getMonth(date).length;\r\n    }\r\n\r\n    // ------------------------------- СЕКУНДЫ --------------------------------\r\n    else if (\r\n      activeCursor >= 15 + getMonth(date).length &&\r\n      activeCursor <= 17 + getMonth(date).length\r\n    ) {\r\n      date.setSeconds(date.getSeconds() + delta);\r\n\r\n      if (!ignoreBorders) {\r\n        changeDateWithControl(\r\n          date,\r\n          prevDate,\r\n          Date.prototype.getMinutes,\r\n          Date.prototype.setMinutes,\r\n          Date.prototype.setSeconds,\r\n          -1\r\n        );\r\n      }\r\n\r\n      cursorStart = 15 + getMonth(date).length;\r\n      cursorEnd = 17 + getMonth(date).length;\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    input.value = formatDate(date);\r\n    input.selectionEnd = cursorEnd;\r\n    input.selectionStart = cursorStart;\r\n  }\r\n\r\n  const dateText = formatDate(ref.current);\r\n\r\n  return (\r\n    <Container>\r\n      <Input defaultValue={dateText} onKeyDown={onKeydown} autoFocus />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: auto;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 250px;\r\n  height: 30px;\r\n  box-sizing: border-box;\r\n  border: 1px solid lightgray;\r\n  border-radius: 6px;\r\n  outline: none;\r\n  box-shadow: inset 0 0 3px 1px lightgray;\r\n  font-size: 16px;\r\n  line-height: 30px;\r\n  margin: 0;\r\n  padding: 0 10px 0 10px;\r\n`;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import \"normalize.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}